[{"/var/www/frontend/src/index.tsx":"1","/var/www/frontend/src/reportWebVitals.ts":"2","/var/www/frontend/src/App.tsx":"3","/var/www/frontend/src/theme.ts":"4","/var/www/frontend/src/components/SnackbarProvider.tsx":"5","/var/www/frontend/src/routes/AppRouter.tsx":"6","/var/www/frontend/src/components/Breadcrumbs.tsx":"7","/var/www/frontend/src/components/Navbar/index.tsx":"8","/var/www/frontend/src/routes/index.tsx":"9","/var/www/frontend/src/components/Navbar/Menu.tsx":"10","/var/www/frontend/src/pages/video/PageForm.tsx":"11","/var/www/frontend/src/pages/video/PageList.tsx":"12","/var/www/frontend/src/components/Page.tsx":"13","/var/www/frontend/src/pages/Dashboard.tsx":"14","/var/www/frontend/src/pages/cast-member/CastMemberList.tsx":"15","/var/www/frontend/src/pages/cast-member/CastMemberForm.tsx":"16","/var/www/frontend/src/pages/genre/GenreList.tsx":"17","/var/www/frontend/src/pages/genre/GenreForm.tsx":"18","/var/www/frontend/src/pages/category/CategoryForm.tsx":"19","/var/www/frontend/src/pages/category/CategoryList.tsx":"20","/var/www/frontend/src/pages/video/components/Form/index.tsx":"21","/var/www/frontend/src/pages/cast-member/components/Form.tsx":"22","/var/www/frontend/src/pages/category/components/Form.tsx":"23","/var/www/frontend/src/pages/category/components/Table.tsx":"24","/var/www/frontend/src/pages/genre/components/Form.tsx":"25","/var/www/frontend/src/pages/cast-member/components/Table.tsx":"26","/var/www/frontend/src/pages/genre/components/Table.tsx":"27","/var/www/frontend/src/util/http/video-http.ts":"28","/var/www/frontend/src/util/vendor/yup.ts":"29","/var/www/frontend/src/components/DefaultForm.tsx":"30","/var/www/frontend/src/components/SubmitAction.tsx":"31","/var/www/frontend/src/pages/video/components/Form/UploadField.tsx":"32","/var/www/frontend/src/components/AsyncAutocomplete.tsx":"33","/var/www/frontend/src/pages/video/components/Form/RatingField.tsx":"34","/var/www/frontend/src/util/http/cast-member-http.ts":"35","/var/www/frontend/src/util/http/category-http.ts":"36","/var/www/frontend/src/util/http/genre-http.ts":"37","/var/www/frontend/src/util/models.ts":"38","/var/www/frontend/src/components/Badge.tsx":"39","/var/www/frontend/src/hooks/useFilter.ts":"40","/var/www/frontend/src/components/Table/FilterResetButton.tsx":"41","/var/www/frontend/src/util/http/http-resource.ts":"42","/var/www/frontend/src/util/http/index.tsx":"43","/var/www/frontend/src/components/InputFile.tsx":"44","/var/www/frontend/src/components/Rating.tsx":"45","/var/www/frontend/src/components/Table/index.tsx":"46","/var/www/frontend/src/components/Table/DebouncedTableSearch.js":"47","/var/www/frontend/src/store/filter/index.ts":"48","/var/www/frontend/src/components/GridSelected.tsx":"49","/var/www/frontend/src/components/GridSelectedItem.tsx":"50","/var/www/frontend/src/hooks/useHttpHandled.ts":"51","/var/www/frontend/src/hooks/useCollectionManager.ts":"52","/var/www/frontend/src/pages/video/components/Form/CategoryField.tsx":"53","/var/www/frontend/src/pages/video/components/Form/GenreField.tsx":"54","/var/www/frontend/src/util/model-filter.ts":"55","/var/www/frontend/src/pages/video/components/Table.tsx":"56","/var/www/frontend/src/components/DeleteDialog.tsx":"57","/var/www/frontend/src/hooks/useDeleteCollection.ts":"58","/var/www/frontend/src/pages/video/components/Form/CastMemberField.tsx":"59","/var/www/frontend/src/components/loading/LoadingContext.tsx":"60","/var/www/frontend/src/components/loading/LoadingProvider.tsx":"61","/var/www/frontend/src/components/Spinner.tsx":"62","/var/www/frontend/src/hooks/useSnackbarFormError.ts":"63","/var/www/frontend/src/components/SnackbarUpload/index.tsx":"64","/var/www/frontend/src/components/SnackbarUpload/UploadItem.tsx":"65","/var/www/frontend/src/components/UploadProgress.tsx":"66","/var/www/frontend/src/components/SnackbarUpload/UploadAction.tsx":"67","/var/www/frontend/src/store/index.ts":"68","/var/www/frontend/src/store/upload/index.ts":"69","/var/www/frontend/src/store/root-saga.ts":"70","/var/www/frontend/src/store/upload/saga.ts":"71","/var/www/frontend/src/store/upload/getters.ts":"72","/var/www/frontend/src/pages/uploads/index.tsx":"73","/var/www/frontend/src/pages/uploads/UploadItem.tsx":"74","/var/www/frontend/src/pages/uploads/UploadAction.tsx":"75"},{"size":622,"mtime":1618621676071,"results":"76","hashOfConfig":"77"},{"size":425,"mtime":1612739214530,"results":"78","hashOfConfig":"77"},{"size":1070,"mtime":1618109979358,"results":"79","hashOfConfig":"77"},{"size":3314,"mtime":1615726239163,"results":"80","hashOfConfig":"77"},{"size":1113,"mtime":1617454592059,"results":"81","hashOfConfig":"77"},{"size":603,"mtime":1612739214530,"results":"82","hashOfConfig":"77"},{"size":2826,"mtime":1612739214526,"results":"83","hashOfConfig":"77"},{"size":955,"mtime":1612739214526,"results":"84","hashOfConfig":"77"},{"size":3009,"mtime":1618590824350,"results":"85","hashOfConfig":"77"},{"size":2267,"mtime":1618590860554,"results":"86","hashOfConfig":"77"},{"size":373,"mtime":1615747662580,"results":"87","hashOfConfig":"77"},{"size":799,"mtime":1617551661667,"results":"88","hashOfConfig":"77"},{"size":639,"mtime":1612739214526,"results":"89","hashOfConfig":"77"},{"size":224,"mtime":1612739214530,"results":"90","hashOfConfig":"77"},{"size":836,"mtime":1612739214530,"results":"91","hashOfConfig":"77"},{"size":294,"mtime":1612739214530,"results":"92","hashOfConfig":"77"},{"size":837,"mtime":1612739214530,"results":"93","hashOfConfig":"77"},{"size":295,"mtime":1612739214530,"results":"94","hashOfConfig":"77"},{"size":413,"mtime":1612739214530,"results":"95","hashOfConfig":"77"},{"size":821,"mtime":1612739214530,"results":"96","hashOfConfig":"77"},{"size":15711,"mtime":1618603503722,"results":"97","hashOfConfig":"77"},{"size":4791,"mtime":1617547267197,"results":"98","hashOfConfig":"77"},{"size":4724,"mtime":1618109791101,"results":"99","hashOfConfig":"77"},{"size":5714,"mtime":1618608244662,"results":"100","hashOfConfig":"77"},{"size":5758,"mtime":1617547305437,"results":"101","hashOfConfig":"77"},{"size":8213,"mtime":1618608171246,"results":"102","hashOfConfig":"77"},{"size":8116,"mtime":1618608446159,"results":"103","hashOfConfig":"77"},{"size":160,"mtime":1615744226208,"results":"104","hashOfConfig":"77"},{"size":397,"mtime":1618616134409,"results":"105","hashOfConfig":"77"},{"size":880,"mtime":1612739214526,"results":"106","hashOfConfig":"77"},{"size":1149,"mtime":1618603257886,"results":"107","hashOfConfig":"77"},{"size":2139,"mtime":1617626766378,"results":"108","hashOfConfig":"77"},{"size":3128,"mtime":1618620170487,"results":"109","hashOfConfig":"77"},{"size":2246,"mtime":1615748410880,"results":"110","hashOfConfig":"77"},{"size":176,"mtime":1612739214530,"results":"111","hashOfConfig":"77"},{"size":170,"mtime":1612739214530,"results":"112","hashOfConfig":"77"},{"size":160,"mtime":1612739214530,"results":"113","hashOfConfig":"77"},{"size":1595,"mtime":1615744164896,"results":"114","hashOfConfig":"77"},{"size":666,"mtime":1612739214526,"results":"115","hashOfConfig":"77"},{"size":7012,"mtime":1618608094878,"results":"116","hashOfConfig":"77"},{"size":721,"mtime":1618608054970,"results":"117","hashOfConfig":"77"},{"size":3753,"mtime":1618496135355,"results":"118","hashOfConfig":"77"},{"size":1233,"mtime":1618109769509,"results":"119","hashOfConfig":"77"},{"size":2065,"mtime":1617573363935,"results":"120","hashOfConfig":"77"},{"size":942,"mtime":1615747248739,"results":"121","hashOfConfig":"77"},{"size":3888,"mtime":1618608011878,"results":"122","hashOfConfig":"77"},{"size":2960,"mtime":1612739214526,"results":"123","hashOfConfig":"77"},{"size":2875,"mtime":1615730068578,"results":"124","hashOfConfig":"77"},{"size":727,"mtime":1617474215853,"results":"125","hashOfConfig":"77"},{"size":836,"mtime":1617474168609,"results":"126","hashOfConfig":"77"},{"size":568,"mtime":1617476284688,"results":"127","hashOfConfig":"77"},{"size":922,"mtime":1617479727431,"results":"128","hashOfConfig":"77"},{"size":4218,"mtime":1618590346145,"results":"129","hashOfConfig":"77"},{"size":3960,"mtime":1617622480800,"results":"130","hashOfConfig":"77"},{"size":240,"mtime":1618589053784,"results":"131","hashOfConfig":"77"},{"size":7804,"mtime":1618608446163,"results":"132","hashOfConfig":"77"},{"size":1131,"mtime":1617551609635,"results":"133","hashOfConfig":"77"},{"size":527,"mtime":1617551535352,"results":"134","hashOfConfig":"77"},{"size":3602,"mtime":1618590072793,"results":"135","hashOfConfig":"77"},{"size":114,"mtime":1617758757670,"results":"136","hashOfConfig":"77"},{"size":1956,"mtime":1618496833460,"results":"137","hashOfConfig":"77"},{"size":1026,"mtime":1618110093263,"results":"138","hashOfConfig":"77"},{"size":529,"mtime":1618064100992,"results":"139","hashOfConfig":"77"},{"size":3526,"mtime":1618504303474,"results":"140","hashOfConfig":"77"},{"size":2385,"mtime":1618509460227,"results":"141","hashOfConfig":"77"},{"size":1451,"mtime":1618506545776,"results":"142","hashOfConfig":"77"},{"size":2453,"mtime":1618607983570,"results":"143","hashOfConfig":"77"},{"size":689,"mtime":1618503602059,"results":"144","hashOfConfig":"77"},{"size":5286,"mtime":1618588766588,"results":"145","hashOfConfig":"77"},{"size":181,"mtime":1618417617630,"results":"146","hashOfConfig":"77"},{"size":2488,"mtime":1618608332775,"results":"147","hashOfConfig":"77"},{"size":648,"mtime":1618590939802,"results":"148","hashOfConfig":"77"},{"size":3117,"mtime":1618590750854,"results":"149","hashOfConfig":"77"},{"size":1982,"mtime":1618590766950,"results":"150","hashOfConfig":"77"},{"size":3059,"mtime":1618590777290,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sfk83p",{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"156"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"156"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"156"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"156"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"156"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"156"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"/var/www/frontend/src/index.tsx",[],"/var/www/frontend/src/reportWebVitals.ts",[],["311","312"],"/var/www/frontend/src/App.tsx",[],"/var/www/frontend/src/theme.ts",[],"/var/www/frontend/src/components/SnackbarProvider.tsx",[],"/var/www/frontend/src/routes/AppRouter.tsx",[],"/var/www/frontend/src/components/Breadcrumbs.tsx",[],"/var/www/frontend/src/components/Navbar/index.tsx",[],"/var/www/frontend/src/routes/index.tsx",[],"/var/www/frontend/src/components/Navbar/Menu.tsx",[],"/var/www/frontend/src/pages/video/PageForm.tsx",[],"/var/www/frontend/src/pages/video/PageList.tsx",[],"/var/www/frontend/src/components/Page.tsx",[],"/var/www/frontend/src/pages/Dashboard.tsx",[],"/var/www/frontend/src/pages/cast-member/CastMemberList.tsx",[],"/var/www/frontend/src/pages/cast-member/CastMemberForm.tsx",[],"/var/www/frontend/src/pages/genre/GenreList.tsx",[],"/var/www/frontend/src/pages/genre/GenreForm.tsx",[],"/var/www/frontend/src/pages/category/CategoryForm.tsx",[],"/var/www/frontend/src/pages/category/CategoryList.tsx",[],"/var/www/frontend/src/pages/video/components/Form/index.tsx",["313","314","315","316","317"],"import * as React from 'react';\nimport * as yup from '../../../../util/vendor/yup';\nimport {useForm} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport {useSnackbar} from \"notistack\";\nimport {useHistory, useParams} from \"react-router\";\n import {createRef, MutableRefObject, useContext, useEffect, useMemo, useRef, useState} from \"react\";\nimport videoHttp from \"../../../../util/http/video-http\";\nimport {Video, VideoFileFieldsMap} from \"../../../../util/models\";\nimport {DefaultForm} from \"../../../../components/DefaultForm\";\nimport {Card, CardContent, FormHelperText, Grid, Snackbar, TextField, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport SubmitAction from \"../../../../components/SubmitAction\";\nimport RatingField from \"./RatingField\";\nimport UploadField from \"./UploadField\";\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GenreField, {GenreFieldComponent} from \"./GenreField\";\nimport CategoryField, {CategoryFieldComponent} from \"./CategoryField\";\nimport CastMemberField, {CastMemberFieldComponent} from \"./CastMemberField\";\nimport {omit,zipObject} from 'lodash'\nimport {InputFileComponent} from \"../../../../components/InputFile\";\nimport LoadingContext from \"../../../../components/loading/LoadingContext\";\nimport SnackbarUpload from \"../../../../components/SnackbarUpload\";\nimport {useSelector,useDispatch} from 'react-redux';\nimport {FileInfo, Upload, UploadModule} from \"../../../../store/upload/types\";\nimport {Creators} from \"../../../../store/upload\";\nimport useSnackBarFormError from '../../../../hooks/useSnackbarFormError';\nimport {Simulate} from \"react-dom/test-utils\";\n\n\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    cardUpload:{\n        borderRadius: \"4px\",\n        backgroundColor: \"#f5f5f5\",\n        margin: theme.spacing(2,0)\n    }\n}))\n\n\nconst SchemaValidation = yup.object().shape({\n    title: yup.string()\n        .label('Título')\n        .required()\n        .max(255),\n    description: yup.string()\n        .label('Sinopse')\n        .required(),\n    year_launched: yup.number()\n        .label('Ano de lançamento')\n        .required()\n        .min(1),\n    duration: yup.number()\n        .label('Duração')\n        .required()\n        .min(1),\n    categories: yup.array()\n        .min(1,'Categoria é Requerido')\n        .label('Categorias')\n        .required(),\n    genres: yup.array()\n        .label('Gêneros')\n        .required()\n        .min(1,'Gêneros é Requerido')\n        .test({\n            message: 'Cada gênero escolhido precisa ter pelo menos uma categoria selecionada',\n            test(value) { //array genres [{name, categories: []}]\n                if(value !== undefined) {\n                    return value.every(\n                        v => v.categories.filter(\n                            cat => this.parent.categories.map(c => c.id).includes(cat.id)\n                        ).length !== 0\n                    );\n                }else{\n                    return true;\n                }\n            }\n        }),\n    rating: yup.string()\n        .label('Classificação')\n        .required(),\n\n});\n\n\nconst fileFields = Object.keys(VideoFileFieldsMap);\nexport const Form = () => {\n    const classes = useStyles();\n    const {\n        register,\n        handleSubmit,\n        getValues,\n        setValue,\n        errors,\n        reset,\n        watch,\n        trigger,\n        formState\n    } = useForm<any>({\n        resolver: yupResolver(SchemaValidation),\n        defaultValues: {\n            rating: null,\n            cast_members: [],\n            genres: [],\n            categories: [],\n            opened: false,\n        }\n    });\n    const snackbar = useSnackbar();\n    const history = useHistory();\n    const {id} = useParams<{id: string}>();\n    const [video, setVideo] = useState<Video | null>(null);\n    console.log(id)\n    const loading = useContext(LoadingContext);\n\n\n\n    // Para saber quando é acima de md\n    const theme = useTheme();\n    const isGreaterMd = useMediaQuery(theme.breakpoints.up('md'));\n    const castMemberRef = useRef() as MutableRefObject<CastMemberFieldComponent>;\n    const genreRef = useRef() as MutableRefObject<GenreFieldComponent>;\n    const categoryRef = useRef() as MutableRefObject<CategoryFieldComponent>;\n    const uploadsRef = useRef(\n        zipObject(fileFields, fileFields.map(() => createRef()))\n    ) as MutableRefObject<{[key: string] : MutableRefObject<InputFileComponent>}>\n\n\n    const uploads = useSelector<UploadModule, Upload[]>(\n        (state) => state.upload.uploads\n    );\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        //Registrando de forma manual no useForm\n        [\n            'rating',\n            'opened',\n            'genres',\n            'categories',\n            'cast_members',\n            ...fileFields\n        ].forEach(name => register({name}));\n    }, [register]);\n\n\n    useEffect(() => {\n        if (!id) {\n            return;\n        }\n        let isSubscribed = true;\n        (async () => {\n            try {\n                const {data} = await videoHttp.get(id);\n                if (isSubscribed) {\n                    setVideo(data.data);\n                    reset(data.data);\n                }\n            } catch (error) {\n                console.error(error);\n                snackbar.enqueueSnackbar(\n                    'Não foi possível carregar as informações',\n                    {variant: 'error',}\n                )\n\n            }\n        })();\n        return () => {\n            isSubscribed = false;\n        }\n    }, []);\n\n    useSnackBarFormError(formState.submitCount, errors);\n\n    async function onSubmit(formData, event) {\n        const sendData = omit(\n            formData,\n            [...fileFields, 'cast_members', 'genres', 'categories']\n        );\n        sendData['cast_members_id'] = formData['cast_members'].map(cast_member => cast_member.id);\n        sendData['categories_id'] = formData['categories'].map(category => category.id);\n        sendData['genres_id'] = formData['genres'].map(genre => genre.id);\n\n        try {\n            const http = !video\n                ? videoHttp.create(sendData)\n                : videoHttp.update(video.id, sendData);\n            const {data} = await http;\n            snackbar.enqueueSnackbar(\n                'Vídeo salvo com sucesso',\n                {variant: 'success'}\n            );\n            uploadFiles(data);\n            id && resetForm(video);\n            setTimeout(() => {\n                event\n                    ? (\n                        id\n                            ? history.replace(`/videos/${data.id}/edit`)\n                            : history.push(`/videos/${data.id}/edit`)\n                    )\n                    : history.push('/videos')\n            });\n        } catch (error) {\n            console.error(error);\n            snackbar.enqueueSnackbar(\n                'Não foi possível salvar o vídeo',\n                {variant: 'error'}\n            )\n        }\n    }\n\n    function resetForm(data){\n        Object.keys(uploadsRef.current).forEach(\n            field => uploadsRef.current[field].current.clear()\n        );\n        castMemberRef.current.clear();\n        genreRef.current.clear();\n        categoryRef.current.clear();\n        reset(data)\n    }\n\n    function uploadFiles(video){\n        const files: FileInfo[] = fileFields\n            .filter(file => getValues()[file])\n            .map(fileField => ({fileField, file: getValues()[fileField]}))\n\n        if(!files.length){\n            return;\n        }\n\n        dispatch(Creators.addUpload({video, files}))\n\n        snackbar.enqueueSnackbar('', {\n            key: 'snackbar-upload',\n            persist: true,\n            anchorOrigin:{\n                horizontal: 'right',\n                vertical: 'bottom'\n            },\n            content: (key,message) => {\n                const id = key as any;\n                return <SnackbarUpload id={id}/>\n            }\n        })\n    }\n\n\n    return (\n        <DefaultForm\n            GridItemProps={{xs: 12}}\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <Grid container spacing={5}>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        name=\"title\"\n                        label=\"Título\"\n                        variant={'outlined'}\n                        fullWidth\n                        inputRef={register}\n                        disabled={loading}\n                        InputLabelProps={{shrink: true}}\n                        error={errors.title !== undefined}\n                        helperText={errors.title && errors.title.message}\n                    />\n                    <TextField\n                        name=\"description\"\n                        label=\"Sinopse\"\n                        multiline\n                        rows=\"4\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        fullWidth\n                        inputRef={register}\n                        disabled={loading}\n                        InputLabelProps={{shrink: true}}\n                        error={errors.description !== undefined}\n                        helperText={errors.description && errors.description.message}\n                    />\n                    <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                            <TextField\n                                name=\"year_launched\"\n                                label=\"Ano de lançamento\"\n                                type=\"number\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                fullWidth\n                                inputRef={register}\n                                disabled={loading}\n                                InputLabelProps={{shrink: true}}\n                                error={errors.year_launched !== undefined}\n                                helperText={errors.year_launched && errors.year_launched.message}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField\n                                name=\"duration\"\n                                label=\"Duração\"\n                                type=\"number\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                fullWidth\n                                inputRef={register}\n                                disabled={loading}\n                                InputLabelProps={{shrink: true}}\n                                error={errors.duration !== undefined}\n                                helperText={errors.duration && errors.duration.message}\n                            />\n                        </Grid>\n                    </Grid>\n                    <CastMemberField\n                        ref={castMemberRef}\n                        castMembers={watch('cast_members')}\n                        setCastMembers={(value) => setValue('cast_members', value, {shouldValidate: true})}\n                        error={errors.cast_members}\n                        disabled={loading}\n                    />\n\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <GenreField\n                                ref={genreRef}\n                                genres={watch('genres')}\n                                setGenres={(value) => setValue('genres',value,{shouldValidate: true})}\n                                categories={watch('categories')}\n                                setCategories={(value) => setValue('categories',value,{shouldValidate: true})}\n                                error={errors.genres}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <CategoryField\n                                ref={categoryRef}\n                                categories={watch('categories')}\n                                setCategories={(value) => setValue('categories',value,{shouldValidate: true})}\n                                genres={watch('genres')}\n                                error={errors.categories}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormHelperText>\n                                Escolha os gêneros do vídeos\n                            </FormHelperText>\n                            <FormHelperText>\n                               Escolha pelo menos uma categoria de cada gênero\n                            </FormHelperText>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <RatingField\n                        value={watch('rating')}\n                        setValue={(value) => setValue('rating',value,{shouldValidate: true})}\n                        error={errors.rating}\n                        disabled={loading}\n                        FormControlProps={{\n                            margin: isGreaterMd ? 'none' : 'normal'\n                        }}\n                    />\n                    <Card className={classes.cardUpload}>\n                        <CardContent>\n                            <Typography color=\"primary\" variant=\"h6\">\n                                Imagens\n                            </Typography>\n                            <UploadField\n                                ref={uploadsRef.current['thumb_file']}\n                                accept={'image/*'}\n                                label={'Thumb'}\n                                setValue={(value) => setValue('thumb_file',value)}\n                            />\n                            <UploadField\n                                ref={uploadsRef.current['banner_file']}\n                                accept={'image/*'}\n                                label={'Banner'}\n                                setValue={(value) => setValue('banner_file',value)}\n                            />\n                        </CardContent>\n                    </Card>\n                    <Card className={classes.cardUpload}>\n                        <CardContent>\n                            <Typography color=\"primary\" variant=\"h6\">\n                               Videos\n                            </Typography>\n                            <UploadField\n                                ref={uploadsRef.current['trailer_file']}\n                                accept={'video/mp4'}\n                                label={'Trailler'}\n                                setValue={(value) => setValue('trailer_file',value)}\n                            />\n                            <UploadField\n                                ref={uploadsRef.current['video_file']}\n                                accept={'video/mp4'}\n                                label={'Principal'}\n                                setValue={(value) => setValue('video_file',value)}\n                            />\n                        </CardContent>\n                    </Card>\n\n                </Grid>\n            </Grid>\n            <SubmitAction\n                disabledButtons={loading}\n                handleSalve={() => {\n                    trigger().then((valid) => {\n                        valid && onSubmit(getValues(), null)\n                    })\n                }\n                }\n            />\n        </DefaultForm>\n\n    );\n};\n","/var/www/frontend/src/pages/cast-member/components/Form.tsx",[],"/var/www/frontend/src/pages/category/components/Form.tsx",[],"/var/www/frontend/src/pages/category/components/Table.tsx",["318","319"],"/var/www/frontend/src/pages/genre/components/Form.tsx",["320"],"import React, {useEffect, useState} from \"react\";\nimport {MenuItem, TextField} from \"@material-ui/core\";\nimport {useForm} from \"react-hook-form\";\nimport categoryHttp from \"../../../util/http/category-http\";\nimport genreHttp from \"../../../util/http/genre-http\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useSnackbar} from \"notistack\";\nimport * as yup from \"../../../util/vendor/yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport SubmitAction from \"../../../components/SubmitAction\";\nimport {DefaultForm} from \"../../../components/DefaultForm\";\n\ninterface Genre {\n    id: string,\n    name: string,\n    categories_id: string[]\n}\n\nconst SchemaValidation = yup.object({\n    name: yup.string()\n        .label('Nome')\n        .required()\n        .max(255),\n    categories_id: yup.array()\n        .label('Categorias')\n        .required()\n});\n\n\nconst Form = () => {\n    const history = useHistory();\n    const {id} = useParams<{id: string}>();\n    const snackbar = useSnackbar();\n\n    const [categories,setCategories] = useState<Genre[]>([]);\n    const [genre,setGenre] = useState<Genre | null>(null);\n    const [loading, setLoading] = useState<boolean>(false)\n\n    const {\n        register,\n        handleSubmit,\n        getValues,\n        setValue,\n        watch,\n        errors,\n        reset,\n        trigger\n    } = useForm<Genre>({\n        resolver: yupResolver(SchemaValidation),\n        defaultValues: {\n            categories_id: []\n        }\n    });\n\n    useEffect(() => {\n        register({name: 'categories_id'})\n    },[register])\n\n    useEffect(() => {\n       let isSubscribed = true;\n        (async () =>{\n            setLoading(true);\n            const promise = [categoryHttp.list({queryParam: {all: ''}})];\n            if(id){\n                promise.push(genreHttp.get(id))\n            }\n            try{\n                if(isSubscribed){\n                    const [categoriesResponse, genteResponse] = await Promise.all(promise);\n                    setCategories(categoriesResponse.data.data);\n                    if(id){\n                        setGenre(genteResponse.data.data);\n                        reset({\n                            ...genteResponse.data.data,\n                            categories_id: genteResponse.data.data.categories.map(category => category.id)\n                        });\n                    }\n                }\n            }catch(error){\n                console.error(error);\n                snackbar.enqueueSnackbar(\n                    'Não foi possível carregar as informações',\n                    {variant: 'error'}\n                )\n            }finally {\n                setLoading(false);\n            }\n        })();\n        return() => {\n            isSubscribed = false;\n        }\n    },[]);\n\n    async function onSubmit(formData,event){\n        setLoading(true);\n        try{\n            const http = !genre\n                ?genreHttp.create(formData)\n                :genreHttp.update(genre.id, formData)\n            const {data} = await http;\n            snackbar.enqueueSnackbar(\n                'Gênero salvo com Sucesso',\n                {variant: 'success'}\n            )\n            setTimeout(() => {\n                event ? (\n                        id\n                            ? history.replace(`/genres/${data.data.id}/edit`)\n                            : history.push(`/genres/${data.data.id}/edit`)\n                    )\n                    :history.push('/genres')\n            })\n        }catch(error) {\n            console.log(error);\n            snackbar.enqueueSnackbar(\n                'Não é possível salvar o gênero',\n                {variant: 'error'}\n            )\n        }finally{\n            setLoading(false)\n        }\n    }\n    return (\n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n                name={\"name\"}\n                label={\"Nome\"}\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name?.message}\n                InputLabelProps={{\n                    shrink: true\n                }}\n\n            />\n            <TextField\n                select\n                name={\"categories_id\"}\n                value={watch('categories_id')}\n                label={\"Categorias\"}\n                fullWidth\n                variant={\"outlined\"}\n                margin={\"normal\"}\n                onChange={(e) => {\n                    setValue('categories_id', e.target.value,{ shouldValidate: true })\n                }}\n                SelectProps={{\n                    multiple: true\n                }}\n                disabled={loading}\n                error={errors.categories_id !== undefined}\n               // helperText={errors.categories_id && errors.categories_id.message}\n                InputLabelProps={{\n                    shrink: true\n                }}\n            >\n                <MenuItem value=\"\">\n                    <em>Selecione uma categoria</em>\n                </MenuItem>\n                {\n                    categories.map(\n                        (category,key) => (\n                            <MenuItem key={key} value={category.id}>{category.name}</MenuItem>\n                        )\n                    )\n                }\n            </TextField>\n            <SubmitAction\n                disabledButtons={loading}\n                handleSalve={() => {\n                    trigger().then((valid) => {\n                        valid && onSubmit(getValues(), null)\n                    })\n                }\n                }\n            />\n        </DefaultForm>\n    );\n};\n\nexport default Form;","/var/www/frontend/src/pages/cast-member/components/Table.tsx",["321","322","323"],"/var/www/frontend/src/pages/genre/components/Table.tsx",["324","325","326","327","328"],"/var/www/frontend/src/util/http/video-http.ts",[],"/var/www/frontend/src/util/vendor/yup.ts",[],"/var/www/frontend/src/components/DefaultForm.tsx",[],"/var/www/frontend/src/components/SubmitAction.tsx",[],"/var/www/frontend/src/pages/video/components/Form/UploadField.tsx",[],"/var/www/frontend/src/components/AsyncAutocomplete.tsx",[],"/var/www/frontend/src/pages/video/components/Form/RatingField.tsx",[],"/var/www/frontend/src/util/http/cast-member-http.ts",[],"/var/www/frontend/src/util/http/category-http.ts",[],"/var/www/frontend/src/util/http/genre-http.ts",[],"/var/www/frontend/src/util/models.ts",[],"/var/www/frontend/src/components/Badge.tsx",[],"/var/www/frontend/src/hooks/useFilter.ts",["329"],"/var/www/frontend/src/components/Table/FilterResetButton.tsx",[],"/var/www/frontend/src/util/http/http-resource.ts",[],"/var/www/frontend/src/util/http/index.tsx",[],"/var/www/frontend/src/components/InputFile.tsx",[],"/var/www/frontend/src/components/Rating.tsx",[],"/var/www/frontend/src/components/Table/index.tsx",[],"/var/www/frontend/src/components/Table/DebouncedTableSearch.js",["330","331"],"import React, {useCallback, useEffect, useState} from 'react';\nimport Grow from '@material-ui/core/Grow';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {debounce} from 'lodash';\n\n\nconst useStyles = makeStyles(\n    theme => ({\n        main: {\n            display: 'flex',\n            flex: '1 0 auto',\n        },\n        searchIcon: {\n            color: theme.palette.text.secondary,\n            marginTop: '10px',\n            marginRight: '8px',\n        },\n        searchText: {\n            flex: '0.8 0',\n        },\n        clearIcon: {\n            '&:hover': {\n                color: theme.palette.error.main,\n            },\n        },\n    }),\n    { name: 'MUIDataTableSearch' },\n);\n\nconst DebouncedTableSearch = ({ options, searchText, onSearch, onHide, debouceTime }) => {\n    const classes = useStyles();\n    const [text, setText] = useState(searchText);\n    let value = text;\n\n    const dispatchOnSearch = useCallback(debounce(value => onSearch(value),debouceTime),[]);\n\n    useEffect(() => {\n        dispatchOnSearch(text);\n    },[text,dispatchOnSearch])\n\n    useEffect(() => {\n        if(searchText && searchText.value !== undefined)\n        {\n            const value = searchText.value;\n            if(value){\n                onSearch(value);\n            }else{\n                try{\n                    onHide();\n                }catch (e){\n\n                }\n            }\n        }\n    },[searchText, onSearch])\n\n\n    const handleTextChange = event => {\n        const value = event.target.value;\n        setText(value);\n    };\n\n    const onKeyDown = event => {\n        if (event.key === 'Escape') {\n            onHide();\n        }\n    };\n\n    return (\n        <Grow appear in={true} timeout={300}>\n            <div className={classes.main}>\n                <SearchIcon className={classes.searchIcon} />\n                <TextField\n                    className={classes.searchText}\n                    autoFocus={true}\n                    InputProps={{\n                        'data-test-id': options.textLabels.toolbar.search,\n                    }}\n                    inputProps={{\n                        'aria-label': options.textLabels.toolbar.search,\n                    }}\n                    value={value || ''}\n                    onKeyDown={onKeyDown}\n                    onChange={handleTextChange}\n                    fullWidth={true}\n                    placeholder={options.searchPlaceholder}\n                    {...(options.searchProps ? options.searchProps : {})}\n                />\n                <IconButton className={classes.clearIcon} onClick={onHide}>\n                    <ClearIcon />\n                </IconButton>\n            </div>\n        </Grow>\n    );\n};\n\nexport default DebouncedTableSearch;\n",["332","333"],"/var/www/frontend/src/store/filter/index.ts",[],"/var/www/frontend/src/components/GridSelected.tsx",[],"/var/www/frontend/src/components/GridSelectedItem.tsx",[],"/var/www/frontend/src/hooks/useHttpHandled.ts",[],"/var/www/frontend/src/hooks/useCollectionManager.ts",[],"/var/www/frontend/src/pages/video/components/Form/CategoryField.tsx",["334"],"import * as React from 'react';\nimport useHttpHandled from \"../../../../hooks/useHttpHandled\";\nimport AsyncAutocomplete, {AsyncAutocompleteComponent} from \"../../../../components/AsyncAutocomplete\";\nimport GridSelected from \"../../../../components/GridSelected\";\nimport GridSelectedItem from \"../../../../components/GridSelectedItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Genre} from \"../../../../util/models\";\nimport categoryHttp from \"../../../../util/http/category-http\";\nimport useCollectionManager from \"../../../../hooks/useCollectionManager\";\nimport {FormControl, FormHelperText, FormControlProps} from \"@material-ui/core\";\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {grey} from \"@material-ui/core/colors\";\nimport {getGenresFromCategory} from \"../../../../util/model-filter\";\nimport {MutableRefObject, useImperativeHandle, useRef} from \"react\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    genresSubtitle: {\n        color: grey[\"800\"],\n        fontSize: '0.8rem'\n    }\n}));\n\n\ninterface CategoryFieldProps {\n    categories: any[];\n    setCategories: (categories) => void;\n    genres: Genre[];\n    error: any;\n    disabled?: boolean;\n    FormControlProps?: FormControlProps;\n\n};\n\nexport interface CategoryFieldComponent{\n    clear: () => void\n}\n\nconst CategoryField = React.forwardRef<CategoryFieldComponent, CategoryFieldProps>((props, ref) => {\n    const classes = useStyles();\n    const {genres,categories,setCategories,error, disabled} = props;\n    const {addItem,removeItem} = useCollectionManager(categories,setCategories);\n    const autocompleteRef = useRef() as MutableRefObject<AsyncAutocompleteComponent>;\n    /* Usado para não aparecer a mensagem de erro no cancelamento*/\n    const autocompleteHttp =useHttpHandled();\n    function fetchOptions(searchText) {\n        return autocompleteHttp(\n            categoryHttp\n                .list({\n                    queryParam: {\n                        genres: genres.map(genre => genre.id).join(','),\n                        all: \"\"\n                    }\n                })\n        ).then(data => data.data)\n    }\n    useImperativeHandle(ref, () => ({\n        clear: () => autocompleteRef.current.clear()\n    }));\n\n\n    return (\n        <>\n        <AsyncAutocomplete\n            ref={autocompleteRef}\n            AutocompleteProps={{\n                getOptionLabel: option => option.name,\n                onChange: (event,value) => addItem(value),\n                disabled: !genres.length || disabled == true\n            }}\n            fetchOptions={fetchOptions}\n            TextFieldProps={{\n                label: 'Categorias'\n            }}\n        />\n            <FormControl\n                error={error !== undefined}\n                disabled={disabled === true}\n                {...props.FormControlProps}\n                margin={\"normal\"}\n                fullWidth\n            >\n                <GridSelected>\n                    {\n                        categories.map((category, key) => {\n                            const genresFromCategory = getGenresFromCategory(genres, category)\n                                .map(genre => genre.name)\n                                .join(',');\n                            return (\n                                <GridSelectedItem\n                                    key={key}\n                                    onDelete={() => removeItem(category)} xs={12}\n                                >\n                                    <Typography noWrap={true}>\n                                        {category.name}\n                                    </Typography>\n                                    <Typography noWrap={true} className={classes.genresSubtitle}>\n                                        Gêneros: {genresFromCategory}\n                                    </Typography>\n                                </GridSelectedItem>\n                            )\n                        })\n                    }\n\n                </GridSelected>\n                {\n                    error && <FormHelperText>{error.message}</FormHelperText>\n                }\n            </FormControl>\n        </>\n    );\n});\n\nexport default CategoryField;","/var/www/frontend/src/pages/video/components/Form/GenreField.tsx",[],"/var/www/frontend/src/util/model-filter.ts",[],"/var/www/frontend/src/pages/video/components/Table.tsx",["335","336"],"/var/www/frontend/src/components/DeleteDialog.tsx",[],"/var/www/frontend/src/hooks/useDeleteCollection.ts",[],"/var/www/frontend/src/pages/video/components/Form/CastMemberField.tsx",["337"],"import * as React from 'react';\nimport AsyncAutocomplete, {AsyncAutocompleteComponent} from \"../../../../components/AsyncAutocomplete\";\nimport GridSelected from \"../../../../components/GridSelected\";\nimport GridSelectedItem from \"../../../../components/GridSelectedItem\";\nimport {FormControl, FormControlProps, FormHelperText, Grid, Typography} from \"@material-ui/core\";\nimport useHttpHandled from \"../../../../hooks/useHttpHandled\";\nimport useCollectionManager from \"../../../../hooks/useCollectionManager\";\nimport castMemberHttp from \"../../../../util/http/cast-member-http\";\nimport {MutableRefObject, RefAttributes, useRef} from \"react\";\nimport {useImperativeHandle} from \"react\";\n\ninterface CastMemberFieldProps extends RefAttributes<CastMemberFieldProps>{\n    castMembers: any[],\n    setCastMembers: (castMembers) => void\n    error: any\n    disabled?: boolean;\n    FormControlProps?: FormControlProps\n}\n\nexport interface CastMemberFieldComponent {\n    clear: () => void\n}\n\nconst CastMemberField = React.forwardRef<CastMemberFieldComponent, CastMemberFieldProps>((props, ref) => {\n    const {\n        castMembers,\n        setCastMembers,\n        error,\n        disabled\n    } = props;\n    const autocompleteHttp = useHttpHandled();\n    const {addItem, removeItem} = useCollectionManager(castMembers, setCastMembers);\n    const autocompleteRef = useRef() as MutableRefObject<AsyncAutocompleteComponent>;\n\n    function fetchOptions(searchText) {\n        return autocompleteHttp(\n            castMemberHttp\n                .list({\n                    queryParam: {\n                        search: searchText, all: \"\"\n                    }\n                })\n        ).then(data => data.data)\n    }\n\n    useImperativeHandle(ref, () => ({\n        clear: () => autocompleteRef.current.clear()\n    }));\n\n    return (\n        <>\n            <AsyncAutocomplete\n                ref={autocompleteRef}\n                fetchOptions={fetchOptions}\n                AutocompleteProps={{\n                    //autoSelect: true,\n                    clearOnEscape: true,\n                    freeSolo: true,\n                    getOptionLabel: option => option.name,\n                    getOptionSelected: (option, value) => option.id === value.id,\n                    onChange: (event, value) => addItem(value),\n                    disabled\n                }}\n                TextFieldProps={{\n                    label: 'Elenco',\n                    error: error !== undefined\n                }}\n            />\n            <FormControl\n                margin={\"normal\"}\n                fullWidth\n                error={error !== undefined}\n                disabled={disabled === true}\n                {...props.FormControlProps}\n            >\n                <GridSelected>\n                    {\n                        castMembers.map((castMember, key) => (\n                            <GridSelectedItem\n                                key={key}\n                                onDelete={() => {\n                                    removeItem(castMember)\n                                }}\n                                xs={6}>\n                                <Typography noWrap={true}>\n                                    {castMember.name}\n                                </Typography>\n                            </GridSelectedItem>\n                        ))\n                    }\n                </GridSelected>\n                {\n                    error && <FormHelperText>{error.message}</FormHelperText>\n                }\n            </FormControl>\n        </>\n    );\n});\n\nexport default CastMemberField;\n","/var/www/frontend/src/components/loading/LoadingContext.tsx",[],"/var/www/frontend/src/components/loading/LoadingProvider.tsx",["338"],"import * as React from 'react';\nimport LoadingContext from \"./LoadingContext\";\nimport {useEffect, useMemo, useState} from \"react\";\nimport {\n    addGlobalRequestInterceptor,\n    addGlobalResponseInterceptor,\n    removeGlobalRequestInterceptor, removeGlobalResponseInterceptor\n} from \"../../util/http\";\n\ninterface LoadingProviderProps{\n    children: React.ReactNode;\n}\n\n\nconst LoadingProvider = (props: LoadingProviderProps) => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [countRequest, setCountRequest] = useState(0);\n\n\n\n    useMemo(() => {\n        let isSubscribed = true;\n        const requestIds = addGlobalRequestInterceptor((config) => {\n            if (isSubscribed && !config.headers.hasOwnProperty('x-ignore-loading')) {\n                setLoading(true);\n                setCountRequest(prevState => prevState + 1);\n            }\n            return config;\n        })\n\n        const responseIds = addGlobalResponseInterceptor((response) =>{\n            if (isSubscribed && !response.config.headers.hasOwnProperty('x-ignore-loading')) {\n                decrementCountRequest();\n            }\n            return response\n        }, (error) => {\n            if (isSubscribed && !error.config.headers.hasOwnProperty('x-ignore-loading')) {\n                decrementCountRequest();\n            }\n            return Promise.reject(error)\n        })\n\n        return () => {\n            isSubscribed = false;\n            removeGlobalRequestInterceptor(requestIds);\n            removeGlobalResponseInterceptor(responseIds);\n        }\n    },[true])\n\n    useEffect(() => {\n        if(!countRequest){\n            setLoading(false);\n        }\n    },[countRequest])\n\n\n\n    function decrementCountRequest(){\n        setCountRequest(prevState => prevState - 1);\n    }\n\n    return (\n        <LoadingContext.Provider value={loading}>\n            {props.children}\n        </LoadingContext.Provider>\n    );\n};\n\nexport default LoadingProvider;","/var/www/frontend/src/components/Spinner.tsx",[],"/var/www/frontend/src/hooks/useSnackbarFormError.ts",["339"],"import {useEffect} from 'react';\nimport {useSnackbar} from \"notistack\";\n\nconst UseSnackbarFormError = (submitCount, errors) => {\n    const snackbar = useSnackbar();\n    useEffect(() => {\n        const hasError = Object.keys(errors).length !== 0;\n        if(submitCount > 0 && hasError){\n            snackbar.enqueueSnackbar(\n                'Formulário Inválido. Revejas os campos marcados de vermelhos',\n                {variant: 'error'}\n            )\n        }\n    },[submitCount]);\n};\n\nexport default UseSnackbarFormError;\n","/var/www/frontend/src/components/SnackbarUpload/index.tsx",[],"/var/www/frontend/src/components/SnackbarUpload/UploadItem.tsx",[],"/var/www/frontend/src/components/UploadProgress.tsx",[],"/var/www/frontend/src/components/SnackbarUpload/UploadAction.tsx",[],"/var/www/frontend/src/store/index.ts",[],"/var/www/frontend/src/store/upload/index.ts",[],"/var/www/frontend/src/store/root-saga.ts",[],"/var/www/frontend/src/store/upload/saga.ts",[],"/var/www/frontend/src/store/upload/getters.ts",[],"/var/www/frontend/src/pages/uploads/index.tsx",[],"/var/www/frontend/src/pages/uploads/UploadItem.tsx",[],"/var/www/frontend/src/pages/uploads/UploadAction.tsx",[],{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","severity":1,"message":"345","line":7,"column":62,"nodeType":"346","messageId":"347","endLine":7,"endColumn":69},{"ruleId":"344","severity":1,"message":"348","line":11,"column":50,"nodeType":"346","messageId":"347","endLine":11,"endColumn":58},{"ruleId":"344","severity":1,"message":"349","line":28,"column":9,"nodeType":"346","messageId":"347","endLine":28,"endColumn":17},{"ruleId":"344","severity":1,"message":"350","line":130,"column":11,"nodeType":"346","messageId":"347","endLine":130,"endColumn":18},{"ruleId":"351","severity":1,"message":"352","line":172,"column":8,"nodeType":"353","endLine":172,"endColumn":10,"suggestions":"354"},{"ruleId":"351","severity":1,"message":"355","line":112,"column":7,"nodeType":"353","endLine":117,"endColumn":6,"suggestions":"356"},{"ruleId":"351","severity":1,"message":"357","line":113,"column":9,"nodeType":"358","endLine":113,"endColumn":67},{"ruleId":"351","severity":1,"message":"352","line":92,"column":7,"nodeType":"353","endLine":92,"endColumn":9,"suggestions":"359"},{"ruleId":"351","severity":1,"message":"355","line":155,"column":8,"nodeType":"353","endLine":162,"endColumn":6,"suggestions":"360"},{"ruleId":"351","severity":1,"message":"357","line":156,"column":9,"nodeType":"358","endLine":156,"endColumn":67},{"ruleId":"351","severity":1,"message":"357","line":161,"column":9,"nodeType":"358","endLine":161,"endColumn":57},{"ruleId":"344","severity":1,"message":"361","line":8,"column":9,"nodeType":"346","messageId":"347","endLine":8,"endColumn":17},{"ruleId":"351","severity":1,"message":"362","line":131,"column":7,"nodeType":"353","endLine":131,"endColumn":9,"suggestions":"363"},{"ruleId":"351","severity":1,"message":"355","line":153,"column":8,"nodeType":"353","endLine":159,"endColumn":6,"suggestions":"364"},{"ruleId":"351","severity":1,"message":"357","line":154,"column":9,"nodeType":"358","endLine":154,"endColumn":67},{"ruleId":"351","severity":1,"message":"357","line":158,"column":9,"nodeType":"358","endLine":158,"endColumn":57},{"ruleId":"351","severity":1,"message":"365","line":32,"column":11,"nodeType":"366","endLine":32,"endColumn":67},{"ruleId":"351","severity":1,"message":"367","line":39,"column":30,"nodeType":"346","endLine":39,"endColumn":41},{"ruleId":"351","severity":1,"message":"368","line":59,"column":7,"nodeType":"353","endLine":59,"endColumn":29,"suggestions":"369"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":"370","severity":1,"message":"371","line":69,"column":54,"nodeType":"372","messageId":"373","endLine":69,"endColumn":56},{"ruleId":"351","severity":1,"message":"355","line":130,"column":8,"nodeType":"353","endLine":135,"endColumn":6,"suggestions":"374"},{"ruleId":"351","severity":1,"message":"357","line":131,"column":9,"nodeType":"358","endLine":131,"endColumn":67},{"ruleId":"344","severity":1,"message":"375","line":5,"column":56,"nodeType":"346","messageId":"347","endLine":5,"endColumn":60},{"ruleId":"351","severity":1,"message":"376","line":48,"column":8,"nodeType":"377","endLine":48,"endColumn":12},{"ruleId":"351","severity":1,"message":"378","line":14,"column":7,"nodeType":"353","endLine":14,"endColumn":20,"suggestions":"379"},"no-native-reassign",["380"],"no-negated-in-lhs",["381"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'Snackbar' is defined but never used.","'Simulate' is defined but never used.","'uploads' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id', 'reset', and 'snackbar'. Either include them or remove the dependency array.","ArrayExpression",["382"],"React Hook useEffect has missing dependencies: 'filterManager' and 'getData'. Either include them or remove the dependency array.",["383"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["384"],["385"],"'Category' is defined but never used.","React Hook useEffect has missing dependencies: 'columnCategories.options' and 'snackbar'. Either include them or remove the dependency array.",["386"],["387"],"The 'filterManager' object construction makes the dependencies of useEffect Hook (at line 41) change on every render. To fix this, wrap the initialization of 'filterManager' in its own useMemo() Hook.","VariableDeclarator","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has a missing dependency: 'onHide'. Either include it or remove the dependency array. If 'onHide' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["388"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["389"],"'Grid' is defined but never used.","The true literal is not a valid dependency because it never changes. You can safely remove it.","Literal","React Hook useEffect has missing dependencies: 'errors' and 'snackbar'. Either include them or remove the dependency array.",["390"],"no-global-assign","no-unsafe-negation",{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"391","fix":"395"},{"desc":"393","fix":"396"},{"desc":"397","fix":"398"},{"desc":"393","fix":"399"},{"desc":"400","fix":"401"},{"desc":"393","fix":"402"},{"desc":"403","fix":"404"},"Update the dependencies array to be: [id, reset, snackbar]",{"range":"405","text":"406"},"Update the dependencies array to be: [debouncedFilterState.pagination.page, debouncedFilterState.pagination.per_page, debouncedFilterState.order, filterManager, getData]",{"range":"407","text":"408"},{"range":"409","text":"406"},{"range":"410","text":"408"},"Update the dependencies array to be: [columnCategories.options, snackbar]",{"range":"411","text":"412"},{"range":"413","text":"408"},"Update the dependencies array to be: [searchText, onSearch, onHide]",{"range":"414","text":"415"},{"range":"416","text":"408"},"Update the dependencies array to be: [errors, snackbar, submitCount]",{"range":"417","text":"418"},[5599,5601],"[id, reset, snackbar]",[3064,3270],"[debouncedFilterState.pagination.page, debouncedFilterState.pagination.per_page, debouncedFilterState.order, filterManager, getData]",[2777,2779],[4754,5087],[4249,4251],"[columnCategories.options, snackbar]",[4748,5012],[1625,1647],"[searchText, onSearch, onHide]",[3573,3779],[470,483],"[errors, snackbar, submitCount]"]